import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,a as t}from"./app.ea43d5eb.js";const p={},o=t(`<h1 id="adapt-lms" tabindex="-1"><a class="header-anchor" href="#adapt-lms" aria-hidden="true">#</a> adapt_lms</h1><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token keyword">function</span> <span class="token function">adapt_lms</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
<span class="token comment">% Level-2 MATLAB file S-Function for system identification using </span>
<span class="token comment">% Least Mean Squares (LMS).</span>

<span class="token comment">%   Copyright 1990-2011 The MathWorks, Inc.</span>

  <span class="token function">setup</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">setup</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
  
  <span class="token comment">%% Register dialog parameter: LMS step size </span>
  block<span class="token punctuation">.</span>NumDialogPrms <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span>DialogPrmsTunable <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Tunable&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">% block.DialogPrm(1).Name = &#39;StepSize&#39;;</span>
  <span class="token comment">% block.DialogPrm(1).DataTypeId = 0;</span>
  
  <span class="token comment">%% Regieste number of input and output ports</span>
  block<span class="token punctuation">.</span>NumInputPorts  <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span>NumOutputPorts <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token comment">%% Setup functional port properties to dynamically</span>
  <span class="token comment">%% inherited.</span>
  block<span class="token punctuation">.</span>SetPreCompInpPortInfoToDynamic<span class="token punctuation">;</span>
  block<span class="token punctuation">.</span>SetPreCompOutPortInfoToDynamic<span class="token punctuation">;</span>

  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity   <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span> 
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DataTypeId   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SamplingMode <span class="token operator">=</span> <span class="token string">&#39;Sample&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions   <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity   <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DataTypeId   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SamplingMode <span class="token operator">=</span> <span class="token string">&#39;Sample&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions   <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity   <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DataTypeId   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SamplingMode <span class="token operator">=</span> <span class="token string">&#39;Sample&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions   <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity   <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DataTypeId   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>SamplingMode <span class="token operator">=</span> <span class="token string">&#39;Sample&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions   <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  
  <span class="token comment">%% Set the block simStateCompliance to default (i.e., same as a built-in block)</span>
  block<span class="token punctuation">.</span>SimStateCompliance <span class="token operator">=</span> <span class="token string">&#39;DefaultSimState&#39;</span><span class="token punctuation">;</span>

  <span class="token comment">%% Register methods</span>
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;CheckParameters&#39;</span><span class="token punctuation">,</span>         <span class="token operator">@</span>CheckPrms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;ProcessParameters&#39;</span><span class="token punctuation">,</span>       <span class="token operator">@</span>ProcessPrms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;PostPropagationSetup&#39;</span><span class="token punctuation">,</span>    <span class="token operator">@</span>DoPostPropSetup<span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;Start&#39;</span><span class="token punctuation">,</span>                   <span class="token operator">@</span>Start<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;WriteRTW&#39;</span><span class="token punctuation">,</span>                <span class="token operator">@</span>WriteRTW<span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">RegBlockMethod</span><span class="token punctuation">(</span><span class="token string">&#39;Outputs&#39;</span><span class="token punctuation">,</span>                 <span class="token operator">@</span>Outputs<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">%% Block runs on TLC in accelerator mode.</span>
  block<span class="token punctuation">.</span><span class="token function">SetAccelRunOnTLC</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">CheckPrms</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
  mu <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">DialogPrm</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  
  <span class="token keyword">if</span> mu <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> mu <span class="token operator">&gt;</span> <span class="token number">1</span>
    <span class="token function">error</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token string">&#39;simdemos:adapt_lms:stepSize&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>
  
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">DoPostPropSetup</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>

  <span class="token comment">%% Setup Dwork  </span>
  N <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>                    <span class="token comment">%% Filter length   </span>
  block<span class="token punctuation">.</span>NumDworks <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">;</span> <span class="token comment">%% u[n],...,u[n-31]</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions      <span class="token operator">=</span> N<span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DatatypeID      <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity      <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UsedAsDiscState <span class="token operator">=</span> true<span class="token punctuation">;</span>
  
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&#39;H&#39;</span><span class="token punctuation">;</span> <span class="token comment">%% Filter coefficients</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Dimensions      <span class="token operator">=</span> N<span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DatatypeID      <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Complexity      <span class="token operator">=</span> <span class="token string">&#39;Real&#39;</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UsedAsDiscState <span class="token operator">=</span> true<span class="token punctuation">;</span>

  <span class="token comment">%% Register all tunable parameters as runtime parameters.</span>
  block<span class="token punctuation">.</span>AutoRegRuntimePrms<span class="token punctuation">;</span>

<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">ProcessPrms</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>

  block<span class="token punctuation">.</span>AutoUpdateRuntimePrms<span class="token punctuation">;</span>
 
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">Start</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
  
  <span class="token comment">%% Initialize Dwork </span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">Outputs</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
  
  mu <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">RuntimePrm</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  N  <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
  
  u <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  d <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">InputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  
  X <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  H <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data<span class="token punctuation">;</span>
  
  <span class="token comment">%%</span>
  <span class="token comment">%% H^(n+1)[i] = H^(n)[i]+mu*(d(n)-y(n))*u(n-i) </span>
  <span class="token comment">%% </span>
  <span class="token function">X</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span>N<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">X</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">X</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token operator">=</span> u<span class="token punctuation">;</span>  
  y      <span class="token operator">=</span> X<span class="token operator">&#39;</span><span class="token operator">*</span>H<span class="token punctuation">;</span>  
  e      <span class="token operator">=</span> d<span class="token operator">-</span>y<span class="token punctuation">;</span>  
  H      <span class="token operator">=</span> H<span class="token operator">+</span>mu<span class="token operator">*</span>e<span class="token operator">*</span>X<span class="token punctuation">;</span>

  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> X<span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">Dwork</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> H<span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> y<span class="token punctuation">;</span>

  <span class="token comment">%% Outputs the difference between the estimated filter coefficients</span>
  <span class="token comment">%% and the actual coefficients.</span>
  b <span class="token operator">=</span> <span class="token function">evalin</span><span class="token punctuation">(</span><span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%% b is the actual filter coefficients</span>
  block<span class="token punctuation">.</span><span class="token function">OutputPort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">norm</span><span class="token punctuation">(</span>b<span class="token operator">&#39;</span><span class="token operator">-</span>H<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
<span class="token comment">%endfunction</span>

<span class="token keyword">function</span> <span class="token function">WriteRTW</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
  
  b <span class="token operator">=</span> <span class="token function">evalin</span><span class="token punctuation">(</span><span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  block<span class="token punctuation">.</span><span class="token function">WriteRTWParam</span><span class="token punctuation">(</span><span class="token string">&#39;matrix&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ActualCoefs&#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">%endfunction</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(l,u){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","adapt_lms.m.html.vue"]]);export{r as default};
