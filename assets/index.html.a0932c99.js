import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c as l,b as s,d as p,a,e as n,r as i}from"./app.172142c5.js";const c={},u=a(`<h1 id="readme" tabindex="-1"><a class="header-anchor" href="#readme" aria-hidden="true">#</a> README</h1><h1 id="plotpub" tabindex="-1"><a class="header-anchor" href="#plotpub" aria-hidden="true">#</a> PlotPub</h1><h4>Publication quality graphs in MATLAB.</h4><p>MATLAB is an excellent tool. It is equally popular among students, researchers and professors. If you use MATLAB for your project/research, you probably know that it is not easy to create publication quality graphs (PQGs) using MATLAB. You will have to call a billion <code>set</code> and <code>get</code> functions to create a decent plot with desired height, width, fonts, line width, color etc. Here, I present PlotPub which is a collection of MATLAB functions and a MATLAB class that allows you to modify almost all aspects of MATLAB figures and export PQGs using one function call and a simple structure.</p><h4>What&#39;s new in v2.2</h4><hr><ul><li>Added SVG and fig to exports (issue # 9). Thanks to <a href="https://github.com/hsidky">Hythem Sidky</a></li><li>Added X/Y/ZTickLabels. Thanks to <a href="https://github.com/hsidky">Hythem Sidky</a>.</li><li>Fixed bug # 6. Thanks to <a href="https://github.com/ChuntaoLu">ChuntaoLu</a>.</li><li>Fixed bug # 5. Thanks to <a href="https://github.com/protik77">Protik Das</a>.</li></ul><h4>What&#39;s new in v2.1</h4><hr><ul><li>Fixed constructor for user supplied handle. Thanks to <a href="https://github.com/hsidky">Hythem Sidky</a>.</li><pre><code>&lt;li&gt;Added a new function, &lt;code&gt;setPlotProp2(hfig, opt)&lt;/code&gt; 
for compatibility with MATLAB line and patch functions.&lt;/li&gt;
</code></pre></ul><h4>New features of v2.x</h4><hr><ul><li>Simple and elegant object oriented approach: all aspects of the MATLAB figure is encapsulated in the Plot class.</li><li>Create new plots, open saved figures or change existing figure using the same call, <code>Plot()</code>.</li><li>Control every aspect of a MATLAB figure using the Plot class object.</li><li>Property changes are immediately visible, useful when using from command window.</li><li>Even easier to use.</li><li>Fully compatible to v1.x.</li></ul><h4>What&#39;s new in v1.4</h4><hr><ul><li>Added the title option.</li></ul><h4>What&#39;s new in v1.3</h4><hr><ul><li>Several bugs fixed including marker spacing.</li><li>New options for axis color, axis line width, tick direction, tick length, minor ticks, legend box, legend text color etc.</li><li>New, more appealing default look.</li></ul><h4>Features of v1.x</h4><hr><ul><li>Generate beautiful, publication quality graphs from instantly generated MATLAB figures or saved MATLAB fig files.</li><li>Export figures in EPS, PDF, JPEG, PNG and TIFF with adjustable resolution.</li><li>Set marker spacing.</li><li>Change almost all aspects of a figure using simple and intuitive code.</li><li>A lot of example codes. A decent tutorial and good documentation.</li><li>Tested in Ubuntu and OSX with MATLAB 7.10. But it should work in other operating systems with other versions of MATLAB.</li><li>Distributed under BSD license which allows you to do anything you like.</li></ul><h4> Compatibility with v1.1</h4><hr> In version 1.2, I introduced a new function <code>setPlotProp</code> which is superior to the old function <code>plotPub</code>. But for backward compatibility, <code>plotPub</code> is still available in v1.2. Therefore, all of your previous codes should work with v1.2. <h4>Downloads</h4><hr><ul><li><a href="https://github.com/masumhabib/PlotPub/archive/master.zip">Compressed package</a></li></ul><h4>Documentation</h4><hr><h5>Installation</h5><hr> Download and extract the zip file from the link given above. Install PlotPub using any one of the three possible ways: (1) copy all the *.m files inside the <code>lib</code> folder to either your MATLAB path or (2) copy those files to your current project folder or (3) put plotPub-master in any convenient folder and add the following line in your MATLAB code: <p><code> addpath(&#39;D:/MATLAB/PlotPub-master/lib&#39;);</code></p><p>where, I assume that you put PlotPub-master in <code>D:/MATLAB</code> folder. The sample codes can be found inside the <code>examples</code> folder.</p><h5>Tutorial</h5><hr> * [Tutorial for v1.4](https://github.com/masumhabib/PlotPub/wiki/Tutorial-for-v1.4) `,46),r=n("To create a beautiful figure using PlotPub, all you need to know is how to use the ("),d=s("code",null,"Plot",-1),m=n(") class. Alternatively, you can use the set-plot-properties ("),k=s("code",null,"setPlotProp",-1),v=n(") function which is discussed "),b={href:"https://github.com/masumhabib/PlotPub/wiki/Tutorial-for-v1.4",target:"_blank",rel:"noopener noreferrer"},h=n("here"),g=n(". The Plot class provides a simple and elegant object oriented programming interface for manipulating MATLAB figures."),f=a(`<p>Let us walk you through an example. Assume that we have data for 3 cycle of a 50 Hz AC voltage signal:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>clear all<span class="token punctuation">;</span>

<span class="token comment">%% lets plot 3 cycles of 50Hz AC voltage</span>
f <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>  <span class="token comment">% frequency</span>
Vm <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">% peak</span>
phi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">% phase</span>

<span class="token comment">% generate the signal</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0.0001</span><span class="token operator">:</span><span class="token number">3</span><span class="token operator">/</span>f<span class="token punctuation">]</span><span class="token punctuation">;</span>
th <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>f<span class="token operator">*</span>t<span class="token punctuation">;</span>
v <span class="token operator">=</span> Vm<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>th<span class="token operator">+</span>phi<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">% plot it</span>
figure<span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>where, <code>f</code> is the frequency, <code>Vm</code> is the peak voltage, <code>t</code> is time and <code>v</code> is the AC voltage signal. Result? An utterly ugly looking figure punching at your face: <a href="http://masumhabib.com/wp-content/uploads/2014/09/ugly.png"><img class="aligncenter size-full wp-image-1325" src="http://masumhabib.com/wp-content/uploads/2014/09/ugly.png" alt="MQGv1.3: ugly"></a></p><p>Now, let us add some spices. Let us set the labels and title:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token comment">% change settings</span>
plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create a Plot object and grab the current figure</span>

plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">&#39;Time, t (ms)&#39;</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>
plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">&#39;Voltage, V (V)&#39;</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>
plt<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&#39;Voltage as a function of time&#39;</span><span class="token punctuation">;</span> <span class="token comment">% plot title</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, call the <code>export</code> function to export the figure:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token comment">% Save? comment the following line if you do not want to save</span>
plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">&#39;plotSimple1.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>The resulting plot should look like:</p><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotSimple1.png" alt="MQGv2.0: Simple plot"></p><p>Instead of creating the plot using</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token comment">% plot it</span>
figure<span class="token punctuation">;</span>
<span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>one could also use Plot class directly to plot:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span>t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create the figure directly using data</span>

plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">&#39;Time, t (ms)&#39;</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>
plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">&#39;Voltage, V (V)&#39;</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>
plt<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&#39;Voltage as a function of time&#39;</span><span class="token punctuation">;</span> <span class="token comment">% plot title</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The full source code for this plot, <code>plotSimple.m</code>, can be found inside the <code>examples_class</code> folder.</p><p>We can change color, linewidth, linestyle etc:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt<span class="token punctuation">.</span>Colors <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>   <span class="token comment">% [red, green, blue]</span>
plt<span class="token punctuation">.</span>LineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment">% line width</span>
plt<span class="token punctuation">.</span>LineStyle <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>   <span class="token comment">% line style: &#39;-&#39;, &#39;:&#39;, &#39;--&#39; etc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotLineStyle.png" alt="MQGv2.0: Line style"></p><p>See <code>plotLineStyle.m</code> for full source code. We can also change scale, axis limit, tick and grid:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt<span class="token punctuation">.</span>YScale <span class="token operator">=</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">;</span>     <span class="token comment">% &#39;linear&#39; or &#39;log&#39;</span>
plt<span class="token punctuation">.</span>YLim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1E-3</span><span class="token punctuation">,</span> <span class="token number">1E3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">% [min, max]</span>
plt<span class="token punctuation">.</span>YTick <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1E-3</span><span class="token punctuation">,</span> <span class="token number">1E-1</span><span class="token punctuation">,</span> <span class="token number">1E1</span><span class="token punctuation">,</span> <span class="token number">1E3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%[tick1, tick2, .. ]</span>
plt<span class="token punctuation">.</span>YGrid <span class="token operator">=</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">;</span>       <span class="token comment">% &#39;on&#39; or &#39;off&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotSimpleLog2.png" alt="MQGv2.0: Simple log scale"> or create a log-log plot:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt<span class="token punctuation">.</span>YScale <span class="token operator">=</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">;</span>     <span class="token comment">% &#39;linear&#39; or &#39;log&#39;</span>
plt<span class="token punctuation">.</span>XScale <span class="token operator">=</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">;</span>     <span class="token comment">% &#39;linear&#39; or &#39;log&#39;</span>
plt<span class="token punctuation">.</span>YLim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1E-3</span><span class="token punctuation">,</span> <span class="token number">1E3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">% [min, max]</span>
plt<span class="token punctuation">.</span>YTick <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1E-3</span><span class="token punctuation">,</span> <span class="token number">1E-1</span><span class="token punctuation">,</span> <span class="token number">1E1</span><span class="token punctuation">,</span> <span class="token number">1E3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%[tick1, tick2, .. ]</span>
plt<span class="token punctuation">.</span>YGrid <span class="token operator">=</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">;</span>       <span class="token comment">% &#39;on&#39; or &#39;off&#39;</span>
plt<span class="token punctuation">.</span>XGrid <span class="token operator">=</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">;</span>       <span class="token comment">% &#39;on&#39; or &#39;off&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotSimpleLogLog.png" alt="MQGv2.0: Simple log log"></p><p>See <code>plotSimpleLog.m</code> and <code>plotSimpleLogLog.m</code> for full source code.</p><p>Creating multiple plots in a single set of axes is also easy:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token comment">% generate the signal</span>
t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0.0001</span><span class="token operator">:</span><span class="token number">3</span><span class="token operator">/</span>f<span class="token punctuation">]</span><span class="token punctuation">;</span>
th <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>f<span class="token operator">*</span>t<span class="token punctuation">;</span>
v1 <span class="token operator">=</span> Vm<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>th<span class="token punctuation">)</span><span class="token punctuation">;</span>
v2 <span class="token operator">=</span> Vm<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>th <span class="token operator">-</span> phi<span class="token punctuation">)</span><span class="token punctuation">;</span>
v3 <span class="token operator">=</span> Vm<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>th <span class="token operator">-</span> phi<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">% plot them</span>
plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span>t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v2<span class="token punctuation">,</span> t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">% change settings</span>
plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">&#39;Time, t (ms)&#39;</span><span class="token punctuation">;</span>   <span class="token comment">% xlabel</span>
plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">&#39;Voltage, V (V)&#39;</span><span class="token punctuation">;</span> <span class="token comment">% ylabel</span>
plt<span class="token punctuation">.</span>YTick <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">% [tick1, tick2, .. ]</span>
plt<span class="token punctuation">.</span>YLim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment">% [min, max]</span>

<span class="token comment">% Save? comment the following line if you do not want to save</span>
plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">&#39;plotMultiple.tiff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note how Plot class constructor is directly used for plotting multiple functions. Result:</p><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotMultiple.png" alt="MQGv2.0: Multiple plots"></p><p>The full source is given in <code>plotMultiple.m</code>. We can change the linestyle, color etc and add a legend:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt<span class="token punctuation">.</span>XLim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment">% [min, max]</span>
plt<span class="token punctuation">.</span>Colors <span class="token operator">=</span> <span class="token punctuation">{</span>                 <span class="token comment">% three colors for three data set</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token number">0</span><span class="token punctuation">,</span>       <span class="token number">0</span><span class="token punctuation">]</span>        <span class="token comment">% data set 1</span>
    <span class="token punctuation">[</span><span class="token number">0.25</span><span class="token punctuation">,</span>   <span class="token number">0.25</span><span class="token punctuation">,</span>    <span class="token number">0.25</span><span class="token punctuation">]</span>     <span class="token comment">% data set 2</span>
    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token number">0</span><span class="token punctuation">,</span>       <span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment">% data set 3</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
plt<span class="token punctuation">.</span>LineWidth <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token comment">% three line widths</span>
plt<span class="token punctuation">.</span>LineStyle <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">% three line styles</span>
plt<span class="token punctuation">.</span>Markers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
plt<span class="token punctuation">.</span>MarkerSpacing <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
plt<span class="token punctuation">.</span>Legend <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;\\theta = 0^o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\theta = 45^o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\theta = 90^o&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">% legends</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotMarkers.png" alt="MQGv2.0: Multiple plots markers"></p><p>Here, <code>plt.Colors{1}</code>, <code>plt.LineWidth(1)</code> and <code>plt.LineStyle{1}</code> set properties of data set 1 and so on. The full source is given in <code>plotMarkers.m</code>.</p><p>By default, <code>PlotPub</code> creates figures with 6in x 3in box size. You can easily change the figure size using the following code.</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>plt<span class="token punctuation">.</span>BoxDim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%[width, height] in inches</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This code creates a figure with 7in x 5in box.</p><p><img src="https://github.com/masumhabib/PlotPub/blob/v2.0/examples_class/plotSize.png" alt="MQGv2.0: Size"></p><p>See <code>plotSize.m</code> for more details.</p><p>You can also load a previously saved MATLAB fig file and export it using <code>Plot</code> class:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>clear all<span class="token punctuation">;</span>

<span class="token comment">% load previously generated fig file</span>
plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token string">&#39;single.fig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">% change settings</span>
plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">&#39;Time, t (ms)&#39;</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>
plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">&#39;Voltage, V (V)&#39;</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>
plt<span class="token punctuation">.</span>BoxDim <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%[width, height]</span>

<span class="token comment">% Save? comment the following line if you do not want to save</span>
plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">&#39;plotSize.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>Reference</h5><hr> * [Reference for v1.4](https://github.com/masumhabib/PlotPub/wiki/Reference-for-v1.4) <p>Given bellow is a brief description of the <code>Plot</code> class and <code>setPlotProp</code> and <code>plotPub</code> functions and their parameters. This documents can also be viewed by invoking:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token operator">&gt;</span><span class="token operator">&gt;</span> help Plot
<span class="token operator">&gt;</span><span class="token operator">&gt;</span> help setPlotProp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>from inside the MATLAB command window.</p><h5>Plot class</h5><hr><p>This class represents a MATLAB figure. It can create new plots, open saved figure files and change properties of opened/existing figures. It can also export figures as publication quality image files. The resolution of the image can be changed by the user. Supported image formats are EPS, PDF, PNG, JPEG and TIFF. The figure properties can be changed by easy-to-remember class properties.</p><p>Constructors:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        
	<span class="token comment">% Grabs the current figure.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span>  
	<span class="token comment">% Grabs the figure pointed by handle.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span><span class="token string">&#39;filename.fig&#39;</span><span class="token punctuation">)</span> 
	<span class="token comment">% Opens the figure file (&#39;filename.fig&#39;) and use the opened figure.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> holdLine<span class="token punctuation">)</span> 
	<span class="token comment">% Grabs the figure pointed by handle. If holdLine = true, it does not </span>
	<span class="token comment">% change the plot properties.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span>Y<span class="token punctuation">)</span>
	<span class="token comment">% Plots Y where Y must be a vector.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span>
	<span class="token comment">% Plots Y vs X. Both X and Y must be vectors.</span>
<span class="token function">Plot</span><span class="token punctuation">(</span>X1<span class="token punctuation">,</span> Y1<span class="token punctuation">,</span> X2<span class="token punctuation">,</span> Y2<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">)</span>
	<span class="token comment">% Plots Y&#39;s vs X&#39;s. X&#39;s and Y&#39;s must be vectors.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The constructors return plot objects which can be used for subsequent property changes.</p><p>Properties:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>BoxDim          <span class="token comment">% vector [width, height]: size of the axes box in inches; </span>
                <span class="token comment">% default: [6, 2.5]</span>
ShowBox         <span class="token comment">% &#39;on&#39; = show or &#39;off&#39; = hide bounding box</span>
FontName        <span class="token comment">% string: font name; default: &#39;Helvetica&#39;</span>
FontSize        <span class="token comment">% integer; default: 26</span>
LineWidth       <span class="token comment">% vector [width1, width2, ..]: element i changes the </span>
                <span class="token comment">% property of i-th dataset; default: 2</span>
LineStyle       <span class="token comment">% cell array {&#39;style1&#39;, &#39;style2&#39;, ..}: element i changes </span>
                <span class="token comment">% the property of i-th dataset; default: &#39;-&#39;</span>
LineCount       <span class="token comment">% Number of plots (readonly)</span>
Markers         <span class="token comment">% cell array {&#39;marker1&#39;, &#39;marker2&#39;, ..}: element i changes </span>
                <span class="token comment">% the property of i-th dataset; default: &#39;None&#39;</span>
MarkerSpacing   <span class="token comment">% vector [space1, space2, ..]: element i changes the </span>
                <span class="token comment">% property of i-th dataset; default: 0</span>
Colors          <span class="token comment">% 3xN matrix, [red, green, blue] where N is the number of </span>
                <span class="token comment">% datasets.</span>
AxisColor       <span class="token comment">% axis color, [red, green, blue]; default black.</span>
AxisLineWidth   <span class="token comment">% axis line width, number; default 2.</span>
XLabel          <span class="token comment">% X axis label</span>
YLabel          <span class="token comment">% Y axis label</span>
ZLabel          <span class="token comment">% Z axis label</span>
XTick           <span class="token comment">% [tick1, tick2, ..]: major ticks for X axis.</span>
YTick           <span class="token comment">% [tick1, tick2, ..]: major ticks for Y axis.</span>
ZTick           <span class="token comment">% [tick1, tick2, ..]: major ticks for Z axis.</span>
XMinorTick      <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show X minor tick?</span>
YMinorTick      <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show Y minor tick?</span>
ZMinorTick      <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show Z minor tick?</span>
TickDir         <span class="token comment">% tick direction: &#39;in&#39; or &#39;out&#39;; default: &#39;in&#39;</span>
TickLength      <span class="token comment">% tick length; default: [0.02, 0.02]</span>
XLim            <span class="token comment">% [min, max]: X axis limit.</span>
YLim            <span class="token comment">% [min, max]: Y axis limit.</span>
ZLim            <span class="token comment">% [min, max]: Z axis limit.</span>
XScale          <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: X axis scale.</span>
YScale          <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: Y axis scale.</span>
ZScale          <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: Z axis scale.</span>
XGrid           <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in X axis?</span>
YGrid           <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in Y axis?</span>
ZGrid           <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in Z axis?</span>
XDir            <span class="token comment">% &#39;in&#39; or &#39;out&#39;: X axis tick direction</span>
YDir            <span class="token comment">% &#39;in&#39; or &#39;out&#39;: Y axis tick direction</span>
ZDir            <span class="token comment">% &#39;in&#39; or &#39;out&#39;: Z axis tick direction</span>
Legend          <span class="token comment">% {&#39;legend1&#39;,&#39;legend2&#39;,...}</span>
LegendBox       <span class="token comment">% bounding box of legend: &#39;on&#39;/&#39;off&#39;; default: &#39;off&#39;</span>
LegendBoxColor  <span class="token comment">% color of the bounding box of legend; default: &#39;none&#39;</span>
LegendTextColor <span class="token comment">% color of the legend text; default: [0,0,0]</span>
LegendLoc       <span class="token comment">% &#39;NorthEast&#39;, ..., &#39;SouthWest&#39;: legend location</span>
Title           <span class="token comment">% plot title, string</span>
Resolution      <span class="token comment">% Resolution (dpi) for bitmapped file. Default:600.</span>
HoldLines       <span class="token comment">% true/false. true == only modify axes settings, do not </span>
                <span class="token comment">% touch plot lines/surfaces. Default false.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>function h = setPlotProp(opt, hfig)</h5><hr><p>This function changes the properties of the figure represented by &#39;hfig&#39; and exports it as a publication quality image file. The resolution of the image can be chosen by the user. Supported image formats are EPS, PDF, PNG, JPEG and TIFF. The figure properties are specified by the options structure &#39;opt&#39;.</p><p>Parameters:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>opt             <span class="token comment">% options structure:</span>
  BoxDim        <span class="token comment">% vector [width, height]: size of the axes box in inches; default: [6, 2.5]</span>
  ShowBox       <span class="token comment">% &#39;on&#39; = show or &#39;off&#39; = hide bounding box; default: &#39;on&#39;</span>
  FontName      <span class="token comment">% string: font name; default: &#39;Arial&#39;</span>
  FontSize      <span class="token comment">% integer; default: 26</span>
  LineWidth     <span class="token comment">% vector [width1, width2, ..]: element i changes the property of i-th dataset; default: 2</span>
  LineStyle     <span class="token comment">% cell array {&#39;style1&#39;, &#39;style2&#39;, ..}: element i changes the property of i-th dataset; default: &#39;-&#39;</span>
  Markers       <span class="token comment">% cell array {&#39;marker1&#39;, &#39;marker2&#39;, ..}: element i changes the property of i-th dataset; default: &#39;None&#39;</span>
  MarkerSpacing <span class="token comment">% vector [space1, space2, ..]: element i changes the property of i-th dataset; default: 0</span>
  Colors        <span class="token comment">% 3xN matrix, [red, green, blue] where N is the number of datasets.</span>
  AxisColor     <span class="token comment">% [red, green, blue]; color of the axis lines; default: black</span>
  AxisLineWidth <span class="token comment">% Witdth of the axis lines; default: 2</span>
  XLabel        <span class="token comment">% X axis label</span>
  YLabel        <span class="token comment">% Y axis label</span>
  ZLabel        <span class="token comment">% Z axis label</span>
  XTick         <span class="token comment">% [tick1, tick2, ..]: major ticks for X axis.</span>
  YTick         <span class="token comment">% [tick1, tick2, ..]: major ticks for Y axis.</span>
  ZTick         <span class="token comment">% [tick1, tick2, ..]: major ticks for Z axis.</span>
  XMinorTick    <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show X minor tick?</span>
  YMinorTick    <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show Y minor tick?</span>
  ZMinorTick    <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show Z minor tick?</span>
  TickDir       <span class="token comment">% tick direction: &#39;in&#39; or &#39;out&#39;; default: &#39;in&#39;</span>
  TickLength    <span class="token comment">% tick length; default: [0.02, 0.02]</span>
  XLim          <span class="token comment">% [min, max]: X axis limit.</span>
  YLim          <span class="token comment">% [min, max]: Y axis limit.</span>
  ZLim          <span class="token comment">% [min, max]: Z axis limit.</span>
  XScale        <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: X axis scale.</span>
  YScale        <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: Y axis scale.</span>
  ZScale        <span class="token comment">% &#39;linear&#39; or &#39;log&#39;: Z axis scale.</span>
  XGrid         <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in X axis?</span>
  YGrid         <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in Y axis?</span>
  ZGrid         <span class="token comment">% &#39;on&#39; or &#39;off&#39;: show grid in Z axis?</span>
  XDir          <span class="token comment">% &#39;in&#39; or &#39;out&#39;: X axis tick direction</span>
  YDir          <span class="token comment">% &#39;in&#39; or &#39;out&#39;: Y axis tick direction</span>
  ZDir          <span class="token comment">% &#39;in&#39; or &#39;out&#39;: Z axis tick direction</span>
  Legend        <span class="token comment">% {&#39;legend1&#39;,&#39;legend2&#39;,...}</span>
  LegendBox     <span class="token comment">% bounding box of legend: &#39;on&#39;/&#39;off&#39;; default: &#39;off&#39;</span>
  LegendBoxColor   <span class="token comment">% color of the bounding box of legend; default: &#39;none&#39;</span>
  LegendTextColor  <span class="token comment">% color of the legend text; default: [0,0,0]</span>
  LegendLoc     <span class="token comment">% &#39;NorthEast&#39;, ..., &#39;SouthWest&#39;: legend location</span>
  Resolution    <span class="token comment">% Resolution (dpi) for bitmapped file. Default:600.</span>
  HoldLines     <span class="token comment">% true/false. true == only modify axes settings, do not touch plot lines/surfaces. Default false.</span>
  FileName      <span class="token comment">% Save? Give a file name.</span>

hfig            <span class="token comment">% Figure handle (optional). Default: current figure.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Return value: figure handle.</p><h5>function h = plotPub(X, Y, N, opt)</h5><hr><p>This function plots <code>X{i}</code> vs <code>Y{i}</code>, changes the properties of the generated figure and exports it as a publication quality image file. The resolution of the image can be chosen by the user. Supported image formats are EPS, PDF, PNG, JPEG and TIFF. The figure properties are specified by the options structure &#39;opt&#39;.</p><p>Parameters:</p><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code>X             <span class="token comment">%cell array of x coordinates</span>
Y             <span class="token comment">%cell array of y coordinates</span>
N             <span class="token comment">%number of plots to be created. N &amp;amp;lt;= length(X)</span>
opt           <span class="token comment">%options structure. Same as above.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5>Project Page</h5><hr> Please see the <a href="http://masumhabib.com/publication-quality-graphs-matlab">project page</a>. `,68);function x(y,P){const e=i("ExternalLinkIcon");return o(),l("div",null,[u,s("p",null,[r,d,m,k,v,s("a",b,[h,p(e)]),g]),f])}var T=t(c,[["render",x],["__file","index.html.vue"]]);export{T as default};
