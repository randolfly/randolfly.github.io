import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.5aea5673.js";const e={},p=t(`<h2 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h2><p>\u4F7F\u7528 Obsidian \u7684 Citation \u63D2\u4EF6\u65F6\u5019\uFF0C\u7ECF\u5E38\u4F1A\u78B0\u89C1\u5728 Zotero \u4E2D\u4EE5\u7A7A\u683C\u5206\u9694\u7684 tag\uFF0C\u6B64\u65F6\u5728 Citation \u5BFC\u5165\u540E\u5C31\u4F1A\u56E0\u4E3A\u7A7A\u683C\u88AB\u5206\u5272\u4E3A\u591A\u4E2A tag\u3002</p><h2 id="\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848" aria-hidden="true">#</a> \u65B9\u6848</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>field<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(keywords?|groups)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> text <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>field<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>marker<span class="token punctuation">.</span>comma<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//   if (text)</span>
        <span class="token comment">//		this.entry.fields[this.field.name].push(text);</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">{</span>
        	<span class="token keyword">var</span> textReplaceSpace <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>entry<span class="token punctuation">.</span>fields<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>field<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>textReplaceSpace<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u5B58\u5728 <code>keywords</code> \u7684\u5730\u65B9\u66FF\u6362\u4E3A\u4E0A\u9762\u7684\u5F0F\u5B50\uFF0C\u610F\u601D\u5C31\u662F\u4F7F\u7528 Regex \u6765\u66FF\u6362\u7A7A\u683C\u4E3A\u201D-\u201C</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><h5 id="\u5F15\u6587" tabindex="-1"><a class="header-anchor" href="#\u5F15\u6587" aria-hidden="true">#</a> \u5F15\u6587</h5><h5 id="\u811A\u6CE8" tabindex="-1"><a class="header-anchor" href="#\u811A\u6CE8" aria-hidden="true">#</a> \u811A\u6CE8</h5>`,8),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(e,[["render",c],["__file","obsidian-Citation-tag\u66FF\u6362\u7A7A\u683C\u4E3A\u8FDE\u5B57\u7B26.html.vue"]]);export{d as default};
