import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c,b as n,d as t,a as o,e as s,r as l}from"./app.fccd9be2.js";const i={},u=o(`<h1 id="csharp-regex\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#csharp-regex\u5339\u914D" aria-hidden="true">#</a> CSharp Regex\u5339\u914D</h1><h2 id="\u57FA\u672C\u6B63\u5219\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6B63\u5219\u5339\u914D" aria-hidden="true">#</a> \u57FA\u672C\u6B63\u5219\u5339\u914D</h2><h3 id="\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D" aria-hidden="true">#</a> \u5339\u914D</h3><p>\u5339\u914D\u662F\u66FF\u6362\u64CD\u4F5C\u7684\u5B50\u96C6\uFF0C\u76F4\u63A5\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Regex<span class="token punctuation">.</span>Match
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C31\u53EF\u4EE5\u4E86</p><h3 id="\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#\u66FF\u6362" aria-hidden="true">#</a> \u66FF\u6362</h3><h4 id="\u66FF\u6362\u524D-n-\u4E2A" tabindex="-1"><a class="header-anchor" href="#\u66FF\u6362\u524D-n-\u4E2A" aria-hidden="true">#</a> \u66FF\u6362\u524D N \u4E2A</h4><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">Regex</span> rgx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Regex</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name"><span class="token keyword">string</span></span> newFileText <span class="token operator">=</span> rgx<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>fileText<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u662F\u66FF\u6362\u7B2C 1 \u4E2A</p><h4 id="\u66FF\u6362\u5168\u90E8" tabindex="-1"><a class="header-anchor" href="#\u66FF\u6362\u5168\u90E8" aria-hidden="true">#</a> \u66FF\u6362\u5168\u90E8</h4><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> patternMd <span class="token operator">=</span> <span class="token string">@&quot;(?&lt;show&gt;!?)\\[(?&lt;name&gt;.*)\\]\\((?!http)(?&lt;content&gt;.+?)\\)&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">MatchEvaluator</span> evaluator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MatchEvaluator</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> <span class="token function">ChangeWikiLink</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> destVaultPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> newFileText <span class="token operator">=</span> Regex<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>fileText<span class="token punctuation">,</span> patternMd<span class="token punctuation">,</span> evaluator<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ChangeWikiLink</span><span class="token punctuation">(</span><span class="token class-name">Match</span> match<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> filePath<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> destVaultPath<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528 <code>MatchEvaluator</code> \u548C <code>Regex.Replace</code> \u53EF\u4EE5\u8FDB\u884C\u81EA\u5B9A\u4E49\u6279\u91CF\u66FF\u6362\u64CD\u4F5C</p><h4 id="\u5E73\u8861\u62EC\u53F7\u7EC4\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#\u5E73\u8861\u62EC\u53F7\u7EC4\u66FF\u6362" aria-hidden="true">#</a> \u5E73\u8861\u62EC\u53F7\u7EC4\u66FF\u6362</h4><p>\u8FD9\u4E2A\u6307\u7684\u662F\u5E0C\u671B\u66FF\u6362\u5339\u914D\u67D0\u4E2A\u5E73\u8861\u7EC4\uFF0C\u7C7B\u4F3C\u5339\u914D html \u4E2D\u7684 tag \u4E4B\u7C7B\u7684\u3002\u4E0B\u9762\u7ED9\u4E00\u4E2A\u5B9E\u9645\u5E94\u7528\uFF1A</p><p>\u671F\u671B\u80FD\u591F\u5C06 <code>TeX</code> \u6E90\u7801\u4E2D\u7684 <code>\\color[RGB]{240, 0, 0}</code> \u8F6C\u6362\u4E3A <code>\\color{red}</code> \u6765\u5B9E\u73B0\u5728 <code>KaTeX</code> \u4E2D\u7684\u6B63\u786E\u663E\u793A\uFF0C\u8FD9\u5C31\u6D89\u53CA\u5230\u5339\u914D <code>{}</code> \u7684\u6570\u76EE\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u7ED9\u6587\u4EF6\u4E2D\u6570\u5B66\u516C\u5F0F\u4E0A\u4E0B\u884C\u589E\u52A0\u7A7A\u683C\uFF0C\u4FEE\u6539\u516C\u5F0F\u989C\u8272\u8BBE\u7F6E</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fileText<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u6587\u4EF6\u4FE1\u606F<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span>\u66FF\u6362\u5B8C\u6210\u7684\u6587\u672C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ReplaceMathText</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name"><span class="token keyword">string</span></span> fileText<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name"><span class="token keyword">string</span></span> newText <span class="token operator">=</span> fileText<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>&quot;
$$
<span class="token string">&quot;, &quot;</span>\\n
$$
\\n&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// equivalnet bracket search</span>
	<span class="token class-name"><span class="token keyword">var</span></span> pattern <span class="token operator">=</span> <span class="token string">@&quot;
		\\{                          # the first {
		\\\\color\\[RGB\\]\\{[^{}]+\\}    # The func name
		(?&lt;content&gt;                 # the content
			(?:                 
			[^\\{\\}]                 # Match all non-braces
			|
			(?&lt;open&gt; \\{ )           # Match &#39;{&#39;, and capture into &#39;open&#39;
			|
			(?&lt;-open&gt; \\} )          # Match &#39;}&#39;, and delete the &#39;open&#39; capture
			)+
			(?(open)(?!))           # Fails if &#39;open&#39; stack isn&#39;t empty!
		)
		\\}                          # Last &#39;}&#39;
	&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">MatchEvaluator</span> evaluator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MatchEvaluator</span><span class="token punctuation">(</span>ReplaceTeXColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name"><span class="token keyword">string</span></span> newFileText <span class="token operator">=</span> Regex<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>newText<span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> evaluator<span class="token punctuation">,</span> RegexOptions<span class="token punctuation">.</span>IgnorePatternWhitespace<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> newFileText<span class="token punctuation">;</span>

	<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ReplaceTeXColor</span><span class="token punctuation">(</span><span class="token class-name">Match</span> match<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name"><span class="token keyword">string</span></span> content <span class="token operator">=</span> match<span class="token punctuation">.</span>Groups<span class="token punctuation">[</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">@&quot;{\\color{red}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
		stringBuilder<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E5F\u5E94\u7528\u5728 obsidian \u8F6C vuepress \u535A\u5BA2\u9879\u76EE\u4E2D</p><h2 id="\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848" aria-hidden="true">#</a> \u65B9\u6848</h2><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><h5 id="\u5F15\u6587" tabindex="-1"><a class="header-anchor" href="#\u5F15\u6587" aria-hidden="true">#</a> \u5F15\u6587</h5>`,21),r={href:"https://www.ape-ask.com/read-15828.html",target:"_blank",rel:"noopener noreferrer"},d=s("\u4F7F\u7528RegEx\u5E73\u8861\u5339\u914D\u62EC\u53F7"),k={href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"},v=s("regex101: build, test, and debug regex"),m={href:"https://regexr.com/6io6i",target:"_blank",rel:"noopener noreferrer"},h=s("RegExr: Untitled 6io6i"),g=n("h5",{id:"\u811A\u6CE8",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u811A\u6CE8","aria-hidden":"true"},"#"),s(" \u811A\u6CE8")],-1);function b(x,f){const a=l("ExternalLinkIcon");return p(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[d,t(a)])]),n("li",null,[n("a",k,[v,t(a)])]),n("li",null,[n("a",m,[h,t(a)])])]),g])}var y=e(i,[["render",b],["__file","CSharp-Regex\u5339\u914D.html.vue"]]);export{y as default};
